# @title templates
# @description Personal Java templates
# @task_type LASTMOD
#
# Created by the Workspace Mechanic Preference Recorder
#Tue Mar 28 16:15:51 CEST 2017
file_export_version=3.0
/instance/org.eclipse.jdt.ui/org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="false" context\="java" deleted\="false" description\="iterate over array" enabled\="true" id\="org.eclipse.jdt.ui.templates.for_array" name\="for">for (int ${index} \= 0; ${index} &lt; ${array}.length; ${index}++) {\n\t${line_selection}${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="iterate over array with temporary variable" enabled\="true" id\="org.eclipse.jdt.ui.templates.for_temp" name\="for">for (int ${index} \= 0; ${index} &lt; ${array}.length; ${index}++) {\n\t${array_type} ${array_element} \= ${array}[${index}];\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="iterate over collection" enabled\="true" id\="org.eclipse.jdt.ui.templates.for_collection" name\="for">for (Iterator ${iterator} \= ${collection}.iterator(); ${iterator}.hasNext(); ) {\n\t${type} ${element} \= (${type}) ${iterator}.next();\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="iterate over an array or Iterable" enabled\="true" id\="org.eclipse.jdt.ui.templates.for_iterable" name\="foreach">for (${iterable_type} ${iterable_element} \: ${iterable}) {\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="iterate with enumeration" enabled\="true" id\="org.eclipse.jdt.ui.templates.while_enumeration" name\="while">while (${enumeration}.hasMoreElements()) {\n\t${type} ${element} \= (${type}) ${enumeration}.nextElement();\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="iterate with iterator" enabled\="true" id\="org.eclipse.jdt.ui.templates.while_iterator" name\="while">while (${iterator}.hasNext()) {\n\t${type} ${element} \= (${type}) ${iterator}.next();\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="do while statement" enabled\="true" id\="org.eclipse.jdt.ui.templates.do" name\="do">do {\n\t${line_selection}${cursor}\n} while (${condition});</template><template autoinsert\="false" context\="java" deleted\="false" description\="switch case statement" enabled\="true" id\="org.eclipse.jdt.ui.templates.switch" name\="switch">switch (${key}) {\n\tcase ${value}\:\n\t\t${cursor}\n\t\tbreak;\n\n\tdefault\:\n\t\tbreak;\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="if statement" enabled\="true" id\="org.eclipse.jdt.ui.templates.if" name\="if">if (${condition}) {\n\t${line_selection}${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="if else statement" enabled\="true" id\="org.eclipse.jdt.ui.templates.ifelse" name\="ifelse">if (${condition}) {\n\t${cursor}\n} else {\n\t\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="else if block" enabled\="true" id\="org.eclipse.jdt.ui.templates.elseif" name\="elseif">else if (${condition}) {\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="else block" enabled\="true" id\="org.eclipse.jdt.ui.templates.else" name\="else">else {\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="try catch block" enabled\="true" id\="org.eclipse.jdt.ui.templates.try" name\="try">try {\n\t${line_selection}${cursor}\n} catch (${Exception} ex) {\n\t// ${todo}\: handle exception\n\tlogMessage(NCTracer.ERR_UNEXP, null, ex);\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="catch block" enabled\="true" id\="org.eclipse.jdt.ui.templates.catch" name\="catch">catch (${Exception} e) {\n\t${cursor}// ${todo}\: handle exception\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="main method" enabled\="true" id\="org.eclipse.jdt.ui.templates.main" name\="main">public static void main(String[] args) {\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="public method" enabled\="true" id\="org.eclipse.jdt.ui.templates.public_method" name\="public_method">public ${return_type} ${name}(${}) {\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="protected method" enabled\="true" id\="org.eclipse.jdt.ui.templates.protected_method" name\="protected_method">protected ${return_type} ${name}(${}) {\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="private method" enabled\="true" id\="org.eclipse.jdt.ui.templates.private_method" name\="private_method">private ${return_type} ${name}(${}) {\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="private static method" enabled\="true" id\="org.eclipse.jdt.ui.templates.private_static_method" name\="private_static_method">private static ${return_type} ${name}(${}) {\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="dynamic type test and cast" enabled\="true" id\="org.eclipse.jdt.ui.templates.instanceof" name\="instanceof">if (${name} instanceof ${type}) {\n\t${type} ${new_name} \= (${type})${name};\n\t${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="dynamic cast" enabled\="true" id\="org.eclipse.jdt.ui.templates.cast" name\="cast">${type} ${new_name} \= (${type}) ${name};</template><template autoinsert\="false" context\="java" deleted\="false" description\="create new object" enabled\="true" id\="org.eclipse.jdt.ui.templates.new" name\="new">${type} ${name} \= new ${type}(${arguments});</template><template autoinsert\="false" context\="java" deleted\="false" description\="lazy creation" enabled\="true" id\="org.eclipse.jdt.ui.templates.lazy" name\="lazy">if (${name} \=\= null) {\n\t${name} \= new ${type}(${arguments});\n\t${cursor}\n}\n\nreturn ${name};</template><template autoinsert\="false" context\="java" deleted\="false" description\="convert collection to array" enabled\="true" id\="org.eclipse.jdt.ui.templates.toarray" name\="toarray">(${type}[]) ${collection}.toArray(new ${type}[${collection}.size()])</template><template autoinsert\="true" context\="java" deleted\="false" description\="print to standard out" enabled\="true" id\="org.eclipse.jdt.ui.templates.sysout" name\="sysout">/*xxx*/System.out.println("${user} &gt;&gt; "+${word_selection}${});${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="print to standard error" enabled\="true" id\="org.eclipse.jdt.ui.templates.syserr" name\="syserr">/*xxx*/System.err.println(${word_selection}${});${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="print current method to standard out" enabled\="true" id\="org.eclipse.jdt.ui.templates.systrace" name\="systrace">/*xxx*/System.out.println("${enclosing_type}.${enclosing_method}()");</template><template autoinsert\="false" context\="java" deleted\="false" description\="while loop with condition" enabled\="true" id\="org.eclipse.jdt.ui.templates.while_condition" name\="while">while (${condition}) {\n\t${line_selection}${cursor}\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="test method" enabled\="true" id\="org.eclipse.jdt.ui.templates.test" name\="test">public void test${name}() throws Exception {\n\t${cursor} \n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="test method (JUnit 4)" enabled\="true" id\="org.eclipse.jdt.ui.templates.test_junit4" name\="Test">@Test\npublic void ${testname}() throws Exception {\n\t${cursor} \n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="synchronized block" enabled\="true" id\="org.eclipse.jdt.ui.templates.synchronized" name\="synchronized">synchronized (${mutex}) {\n\t${line_selection}\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="adviceexecution pointcut (AspectJ)" enabled\="true" name\="adviceexecution">adviceexecution()</template><template autoinsert\="true" context\="java" deleted\="false" description\="after returning advice (AspectJ)" enabled\="true" name\="after_returning">after(${args}) returning() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="java" deleted\="false" description\="after throwing advice (AspectJ)" enabled\="true" name\="after_throwing">after(${args}) throwing() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="java" deleted\="false" description\="around advice (AspectJ)" enabled\="true" name\="around">around(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="java" deleted\="false" description\="before advice (AspectJ)" enabled\="true" name\="before">before(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="java" deleted\="false" description\="call constructor pointcut (AspectJ)" enabled\="true" name\="call_cons">call(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="call method declaration (AspectJ)" enabled\="true" name\="call_method">call(${modifiers_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="cflow pointcut (AspectJ)" enabled\="true" name\="cflow">cflow(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="cflowbelow pointcut (AspectJ)" enabled\="true" name\="cflowbelow">cflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="declare error (AspectJ)" enabled\="true" name\="dece">declare error \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="java" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_extends">declare parents \: ${type_pattern} extends ${type};</template><template autoinsert\="true" context\="java" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_implements">declare parents \: ${type_pattern} implements ${type};</template><template autoinsert\="true" context\="java" deleted\="false" description\="declare soft (AspectJ)" enabled\="true" name\="decs">declare soft \: ${exception_type} \: ${pointcut_expression};</template><template autoinsert\="true" context\="java" deleted\="false" description\="declare warning (AspectJ)" enabled\="true" name\="decw">declare warning \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="java" deleted\="false" description\="execution of a constructor pointcut (AspectJ)" enabled\="true" name\="execution_cons">execution(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="execution of a method pointcut (AspectJ)" enabled\="true" name\="execution_method">execution(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="get pointcut (AspectJ)" enabled\="true" name\="get">get(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="handler pointcut (AspectJ)" enabled\="true" name\="handler">handler(${type_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="initialization pointcut (AspectJ)" enabled\="true" name\="initialization">initialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="Comment which makes VE show the declaration floating on the graphical viewer " enabled\="true" name\="jve-float">// @jve\:decl-index\=0\:visual-constraint\=""</template><template autoinsert\="true" context\="java" deleted\="false" description\="Comment which forces VE to model the declaration on this line " enabled\="true" name\="jve-model">// @jve\:decl-index\=0\:</template><template autoinsert\="true" context\="java" deleted\="false" description\="Comment which makes VE show the declaration on the graphical viewer at 100,100 " enabled\="true" name\="jve-xy">// @jve\:decl-index\=0\:visual-constraint\="100,100${cursor}"</template><template autoinsert\="true" context\="java" deleted\="false" description\="Enregistrement d'un listener IV" enabled\="true" name\="ncaddelementlistener">// NE PAS OUBLIER DE removeListener(ivListener) \!\n    IVElementListener ivListener \= new IVElementAdapter() {\n        /**\n         * Notification d'un \u00E9v\u00E8nement de changement de valeur sur l'\u00E9l\u00E9ment\n         * @param\tevent\tObjet contenant les informations sur l'\u00E9v\u00E8nement\n         */\n        public void valueChanged(IVValueEvent event) {}\n        /**\n         * Notification d'un \u00E9v\u00E8nement de changement de structure sur l'\u00E9l\u00E9ment\n         * @param\tevent\tObjet contenant les informations sur l'\u00E9v\u00E8nement\n         */\n        public void structureChanged(IVStructureEvent event) {}\n    \n        /**\n         * Notification d'un \u00E9v\u00E8nement changement d'une proprit l'\u00E9l\u00E9ment\n         * @param\tevent\tObjet contenant les informations sur l'\u00E9v\u00E8nement\n         */\n        public void propertyChanged(IVPropertyChangeEvent event) {}\n    \n    };\n    ${cursor}.addElementListener(ivListener, IVCoreConstants.TOTAL_RECURSIVITY);.</template><template autoinsert\="true" context\="java" deleted\="false" description\="Commentaire dans le corps d'une m\u00E9thode" enabled\="true" name\="nccomment">// ${date} (${user}) \: Action ${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Impl\u00E9mentation de nc.util.stream.NCExternalizable " enabled\="true" name\="ncexternalizable">import java.io.DataInput;\nimport java.io.DataOutput;\nimport java.io.IOException;\nimport nc.util.stream.NCExternalizable;\nimport nc.util.stream.Reader;\nimport nc.util.stream.Writer;\nimport nc.util.MutableInteger;\n// -------------------------------------------------------------------------\n// NCExternalizable\n// -------------------------------------------------------------------------\n/** \n* Code de s\u00E9rialisation.Ce byte est s\u00E9rialis\u00E9, ceci permettra de g\u00E9rer les \n* \u00E9volutions de versions.\n*/\nprivate final static byte NC_SERIAL_VERS \= (byte)1;\n\n// ATTENTION \!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\n// |NE PAS OUBLIER D AJOUTER implements NCExternalizable A VOTRE CLASSE\n// NE PAS OUBLIER LE CONSTRUCTEUR VIDE PUBLIC\n// TESTER LA SERIALISATION \: nc.util.stream.SerialTester\n// ATTENTION \!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\n\n/** Constructeur vide pour la s\u00E9rialisation */\npublic ${enclosing_type}() {\n\tsuper();\n}\n/** Main de test de la s\u00E9rialisation */\npublic static void main(String[] args) throws Exception {\n\t${enclosing_type} obj \= new ${enclosing_type}();\n\t//obj.setXXX();\n\tnc.util.stream.SerialTester.serialTest(obj);\n}\n/**\n * S\u00E9rialisation de l'instance dans le flux\n *\n * @param out Le flux \u00E0 utiliser\n * @return la taille (en octets) de la s\u00E9rialisation ou -1 si inconnue\n */\npublic int writeExternalNC(DataOutput out) throws IOException {\n\tint size \= Writer.writeByte(out, NC_SERIAL_VERS);\n    size +\= Writer.writeObject(out, ${cursor}object);\n    return size;\n}\n\n/**\n * D\u00E9s\u00E9rialisation d'une instance depuis un flux.&lt;br&gt;\n * L'instance est obtenue par le biais du constructeur vide (qui doit donc\n * \u00EAtre impl\u00E9ment\u00E9 et accessible(\=\=public))\n *\n * @param in Le flux cibl\u00E9\n * @return la taille (en octets) de la d\u00E9s\u00E9rialisation ou -1 si inconnue\n */\npublic void readExternalNC(DataInput in, MutableInteger size) throws IOException, ClassNotFoundException {\n\tbyte vers \= Reader.readByte(in, size);\n\tif (vers \!\= NC_SERIAL_VERS) {\n\t\t// evolution de version \!\!\!\u00E0 g\u00E9rer\!\n\t}\n    object \= Reader.readObject(in, size);\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="get et Set d'un propri\u00E9t\u00E9 IntraVision" enabled\="true" name\="ncgetset">    private Object get${word_selection}() {\n    \treturn getProperty(${word_selection});\n    }\n    private void set${word_selection}(Object value){\n    \ttry {\n    \t\tsetPropertyIfNeeded(${word_selection}, value);\n    \t} catch (IVAccessException ex) {\n    \t\tlogMessage(NCTracer.ERR_UNEXP, "No rights to change property "+${word_selection}+" to "+value, ex);\n    \t} catch (IVVetoException ex) {\n    \t\tlogMessage(NCTracer.ERR_UNEXP, "Modification of property "+${word_selection}+" to "+value+" was rejected by sbdy", ex);\n    \t}\n    }\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Cr\u00E9ation d'un IVOConfigData" enabled\="true" name\="ncivoconfigdata">package ${enclosing_package};\n\nimport nc.iv3.comps.base.IVAdminObject;\nimport nc.iv3.comps.base.access.AllowedUseCases;\nimport nc.iv3.core.IVElementDescriptor;\nimport nc.iv3.core.IVIdentity;\nimport nc.iv3.eng.config.server.IVOAbstractConfigData;\nimport nc.iv3.util.IVException;\n\n/**\n * IVO g\u00E9rant la configuration de ...\n * @author NetCeler - ${user}\n * @since ${date}\n */\npublic class IVOXXXConfigData extends IVOAbstractConfigData  {\n\n    // -------------------------------------------------------------------------\n    // Constantes\n    // -------------------------------------------------------------------------\n\n    static final String CONFIG_DATA_IDENTIFIER \= "TODO";\n\n    // -------------------------------------------------------------------------\n    // IVO Structure\n    // -------------------------------------------------------------------------\n\n    public static IVElementDescriptor[] getElementDescriptors() {\n        return IVOAbstractConfigData.getElementDescriptors();\n    }\n\n    // -------------------------------------------------------------------------\n    // IVO Construction\n    // -------------------------------------------------------------------------\n\n    public IVOXXXConfigData() {\n    \tsuper();\n    }\n\n    public IVOXXXConfigData(String identifier) throws IVException {\n        super(identifier);\n    }\n\n    // -------------------------------------------------------------------------\n    // IVO Gestion des droits\n    // -------------------------------------------------------------------------\n\n\t/** Accessible \u00E0 tous le monde, pour le moment */\n\tpublic AllowedUseCases getUseCasesFor(short userId, byte mediaId) {\n\t\treturn AllowedUseCases.ALL_USE_CASES;\n\t}\n\n\t/** Accessible \u00E0 tous le monde, pour le moment */\n\tpublic boolean isModifiableBy(AllowedUseCases useCases) {\n\t\treturn true;\n\t}\n\n\t/** Accessible \u00E0 tous le monde, pour le moment */\n\tpublic boolean isUseableBy(AllowedUseCases useCases) {\n\t\t// On a tjrs besoin de cette donn\u00E9e de configuration\n\t\treturn true;\n\t}\n\n    // -------------------------------------------------------------------------\n    // As IVOConfigData\n    // -------------------------------------------------------------------------\n\n\t/**\n\t * Indique si oui ou non la configuration est "valide" dans le contexte courant du FlyServer.\n\t * Par exemple, la config d'une utilisateur n'est plus valide si cet utilisateur\n\t * ne fait plus parti du syst\u00E8me. Si cette config n'est plus valide, elle sera supprim\u00E9e de\n\t * l'IVOConfigManager\n\t * @return true ou false selon la "validit\u00E9" de cette configuration\n\t */\n\tpublic boolean isValid() {\n        // Cette donn\u00E9e de configuration est toujours valide.\n\t\treturn true;\n    }\n\n    /**\n     * Indique si oui ou non, la configuration associ\u00E9e peut \u00EAtre inject\u00E9e par\n     * l'utilisateur cibl\u00E9\n     * @param identity Identit\u00E9 de l'utilisateur demandant l'injection\n     * @return true si la configuration associ\u00E9e peut \u00EAtre inject\u00E9e\n     */\n\tpublic boolean mayBeInjected(IVIdentity identity) {\n        if (identity \=\= null) {\n            return false;\n        } else if (identity.isSystemIdentity()) {\n            return true;\n        } else {\n             return isModifiableBy(getUseCasesFor(\n                identity.getUserID(), identity.getMediaID()));\n        }\n    }\n\n// Facultatif\:  gestion plus fine de l'injection (conversion de prop, veto...)\n//\t/**\n//\t * M\u00E9thode permettant de renvoyer un objet charg\u00E9 de la v\u00E9rification interne du process\n//\t * d'injection \:  setProperty, ....\n//\t * @param identity Identit\u00E9 de celui demandant l'injection\n//\t * @param params les param\u00E8tres d'injection\n//\t * @return un \u00E9ventuel Validator ou null si pas besoin\n//\t * @since  02.fev.2004 (JG)\n//\t */\n//\tprotected InjectValidator getInjectValidator(IVIdentity identity, InjectActionParams params) {\n//\t\treturn null;\n//\t}\n\n\n}\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Cr\u00E9ation de l'IVO de configuration des droits" enabled\="true" name\="ncivoconfigrights">package YYYY;\n\nimport nc.iv3.comps.base.access.AllowedUseCases;\nimport nc.iv3.core.IVElementDescriptor;\nimport nc.iv3.eng.config.server.IVOAbstractRightsConfigData;\nimport nc.iv3.util.IVException;\n\n/**\n * IVO G\u00E9rant la configuration des droits des utilisateurs pour ce produit\n * @author NetCeler - ${user}\n * @since ${date}\n */\npublic class XXX extends IVOAbstractRightsConfigData {\n\n    public static IVElementDescriptor[] getElementDescriptors() {\n\t\treturn IVOAbstractRightsConfigData.getElementDescriptors();\n    }\n\n    public XXX() {\n    }\n\n    public XXX(String identifier) throws IVException {\n\t\tsuper(identifier);\n    }\n\n    // -------------------------------------------------------------------------\n    // Gestion des droits d'acc\u00E8s \u00E0 cet config\!\n    // -------------------------------------------------------------------------\n\n\t/** Accessible \u00E0 tous le monde */\n    public AllowedUseCases getUseCasesFor(short userId, byte mediaId) {\n\t\treturn AllowedUseCases.ALL_USE_CASES;\n    }\n\n\t/** Accessible \u00E0 tous le monde */\n    public boolean isModifiableBy(AllowedUseCases useCases) {\n\t\treturn true;\n    }\n\n    public boolean isUseableBy(AllowedUseCases useCases) {\n\t\t// On a tjrs besoin de cette donn\u00E9e de configuration\n\t\treturn true;\n    }\n\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Cr\u00E9ation du ConfigServer d'un produit" enabled\="true" name\="ncivoconfigserver">package ${enclosing_package};\n\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\n\nimport nc.iv3.comps.base.access.AllowedUseCases;\nimport nc.iv3.core.IVAccessException;\nimport nc.iv3.core.IVBadIdentifierException;\nimport nc.iv3.core.IVElementDescriptor;\nimport nc.iv3.eng.config.server.IVOAbstractConfigData;\nimport nc.iv3.eng.config.server.IVOAbstractConfigServer;\nimport nc.iv3.eng.config.server.IVOAbstractRightsConfigData;\nimport nc.iv3.util.IVException;\n\n/**\n * Gestionnaire de la configuration du produit TODO\n * Classe de base de la gestion de la configuration cot\u00E9 FlyServer.\n * Cette classe doit \u00EAtre sous-class\u00E9e afin de r\u00E9pondre aux exigences produit de chaque FlyServer.\n * @author NetCeler - JG\n */\npublic class ${enclosing_type} extends IVOAbstractConfigServer {\n\n\t/**\n\t * La stucture est remplie au start (advancedObjectStarted)\n\t */\n\tpublic static IVElementDescriptor[] getElementDescriptors() {\n\t\treturn IVOAbstractConfigServer.getElementDescriptors();\n\t}\n\n\tpublic static Map getIVCommands() {\n\t\treturn IVOAbstractConfigServer.getIVCommands();\n\t}\n\n\t// -------------------------------------------------------------------------\n\t// IVO Construction\n\t// -------------------------------------------------------------------------\n\n\tpublic IVOScarabConfigServer() {\n\t\tsuper();\n\t}\n\n\tpublic IVOScarabConfigServer(String identifier) throws IVException {\n\t\tsuper(identifier);\n\t}\n\n\t// -------------------------------------------------------------------------\n\t// IVO gestion des droits  \: pas de gestion des droits dans Scarab\u00E9e, pour le moment...\n\t// -------------------------------------------------------------------------\n\n\tpublic AllowedUseCases getUseCasesFor(short userId, byte mediaId) {\n\t\treturn AllowedUseCases.ALL_USE_CASES;\n\t}\n\n\tpublic boolean isModifiableBy(AllowedUseCases useCases) {\n\t\treturn true;\n\t}\n\n\tpublic boolean isUseableBy(AllowedUseCases useCases) {\n\t\treturn true;\n\t}\n\n\t// -------------------------------------------------------------------------\n\t// IVO lancement\n\t// -------------------------------------------------------------------------\n\n\t/**\n\t * Au lancement du serveur, on met en place l'orborescence des des fichiers de configuration g\u00E9r\u00E9s par ce\n\t * ConfigServer.\n\t */\n\tprotected void advancedObjectStarted() throws nc.iv3.util.IVException {\n\t\t// TODO Pour chaque IVO, l'ajout\u00E9 dans la liste des COnfigData Du ConfigServer\n\t\t// On cr\u00E9\u00E9 les IVOConfigData absents.\n\t\ttry {\n\t\t\tgetIVOConfigData(IVOProcessListConfigData.CONFIG_DATA_IDENTIFIER);\n\t\t} catch (IVBadIdentifierException ex) {\n\t\t\taddIVOConfigData(new IVOProcessListConfigData(IVOProcessListConfigData.CONFIG_DATA_IDENTIFIER));\n\t\t}\n\t\t// 02.sep.2004 (JG) Gestion des droits du FlyServer\n\t\ttry {\n\t\t\tgetIVOConfigData(IVOAbstractRightsConfigData.CONFIG_DATA_IDENTIFIER);\n\t\t} catch (IVBadIdentifierException ex) {\n\t\t\t// TODO Classe de l'IVOConfigData g\u00E9rant les droits du produit (sous classe IVOAbstractRightsConfigData)\n\t\t\taddIVOConfigData(new IVOScarabRightsConfigData(IVOAbstractRightsConfigData.CONFIG_DATA_IDENTIFIER));\n\t\t}\n\n\t}\n\n\tprotected void stopAdvancedObject() {\n\t\t// rien \u00E0 stopper\n\t}\n\n\t// -------------------------------------------------------------------------\n\t// ConfigServer\n\t// -------------------------------------------------------------------------\n\n\t/**\n\t * @return l'object IVOConfigData \u00E0 injecter en premier\n\t */\n\tpublic IVOAbstractConfigData getRoot() throws IVBadIdentifierException, IVAccessException {\n\t\t// TODO retourner le ConfigData \u00E0 injecter en premier\n\t\treturn getIVOConfigData(IVOProcessListConfigData.CONFIG_DATA_IDENTIFIER);\n\t}\n\n\t/**\n\t * &lt;bold&gt;ne pas oublier le ConfigData rights qui existe pour tous les produits\!&lt;/bold&gt;\n\t * @param parent IVOConfigData "Parent"\n\t * @return la liste des IVOAbstractConfigData "fils" du ConfigData cibl\u00E9\n\t * @see nc.iv3.system.config\#IVORightsConfigData\n\t */\n\tpublic List getChilds(IVOAbstractConfigData parent) {\n\t\t// TODO retourner les fils de chaque parent\n\t\tif (parent instanceof IVOProcessListConfigData) {\n\t\t\tList l \= new LinkedList();\n\t\t\taddConfigDataIfFound(IVOAbstractRightsConfigData.CONFIG_DATA_IDENTIFIER, l);\n\t\t\treturn l;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Log d'une Exception" enabled\="true" name\="nclogerr">logMessage(NCConstants.ERR_UNEXP, "${cursor}", ex);</template><template autoinsert\="true" context\="java" deleted\="false" description\="LogMessage NetCeler" enabled\="true" name\="nclogmessage">logMessage(NCConstants.INFO_DEBUG, "${cursor}", );</template><template autoinsert\="true" context\="java" deleted\="false" description\="Impl\u00E9mentation des m\u00E9thodes logMessage" enabled\="true" name\="nclogmessageimmpl">    // -------------------------------------------------------------------------\n\t// Logs\n   // -------------------------------------------------------------------------\n\tpublic void logMessage(String aText) {\n\t\tlogMessage(NCConstants.INFO_DEBUG, aText, null);\n\t}\n\tpublic void logMessage(String aCode, String aText, Object aDetail) {\n\t\tlogMessage(aCode, aText, aDetail);\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Pause avec ConsoleRequester" enabled\="true" name\="ncpause">    System.out.println("Press ENTER key to continue");\n    String line \= ConsoleRequester.waitForLine();\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Pause avec System.in" enabled\="true" name\="ncpausein">try {\n    \tSystem.out.println("Press ENTER key to continue...");\n    \tSystem.in.read();\n    \twhile(System.in.available() \!\= 0) {\n    \t\tSystem.in.read();\n    \t}\n    }catch (Exception ex) {\n    }</template><template autoinsert\="true" context\="java" deleted\="false" description\="S\u00E9parateur de section au sein d'une classe Java" enabled\="true" name\="ncsep">\t// -------------------------------------------------------------------------\n\t// ${cursor}\n\t// -------------------------------------------------------------------------\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Accesseurs" enabled\="true" name\="ncsepaccessors">\t// Acc\u00E9s aux propri\u00E9t\u00E9s de l'objet -----------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="S\u00E9parateur d'attributs" enabled\="true" name\="ncsepattributes">\t// Attributs de l'objet ----------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="Constantes" enabled\="true" name\="ncsepconstantes">\t// Constantes --------------------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="Constructeur" enabled\="true" name\="ncsepconstructor">\t// Constructeurs -----------------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="Impl\u00E9mentation des m\u00E9thodes" enabled\="true" name\="ncsepimpl">\t// M\u00E9thodes issues de ${cursor}                  ---------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="M\u00E9thodes package" enabled\="true" name\="ncseppackage">\t// M\u00E9thodes package --------------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="M\u00E9thodes priv\u00E9es" enabled\="true" name\="ncsepprivate">\t// M\u00E9thodes priv\u00E9es --------------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="S\u00E9parateur de propri\u00E9t\u00E9s" enabled\="true" name\="ncsepproperties">\t// Propri\u00E9t\u00E9s de l'objet ---------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="M\u00E9thodes publiques" enabled\="true" name\="ncseppublic">\t// M\u00E9thodes publiques ------------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="M\u00E9thodes de tests" enabled\="true" name\="ncseptests">\t// M\u00E9thodes de tests -------------------------------------------------------</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="JavaDoc since comment" enabled\="true" name\="ncsince">@since ${date} (${user}) \: ${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Cr\u00E9er un thread Java" enabled\="true" name\="ncthread">\t\t\t\tfinal Thread thread \= new Thread(NCUtil.getNCThreadGroup(), "Thread Name") {\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t${word_selection}${cursor}\n\t\t\t\t\t\t} catch (OutOfMemoryError ome) {\n\t\t\t\t\t\t\tthrow ome;\n\t\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\t\tNCTracer.getDefaultTracer().logDebugMessage(NCConstants.ERR_UNEXP, "fatal error in thread "+getName(), t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthread.start();</template><template autoinsert\="true" context\="java" deleted\="false" description\="pointcut declaration (AspectJ)" enabled\="true" name\="pc">pointcut ${name}() \: ${pointcut_expression};</template><template autoinsert\="true" context\="java" deleted\="false" description\="percflow (AspectJ)" enabled\="true" name\="percflow">percflow(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="percflowbelow (AspectJ)" enabled\="true" name\="percflowbelow">percflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="pertarget (AspectJ)" enabled\="true" name\="pertarget">pertarget(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="perthis (AspectJ)" enabled\="true" name\="perthis">perthis(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="pertypewithin (AspectJ)" enabled\="true" name\="pertypewithin">pertypewithin(${type_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="pointcut (AspectJ)" enabled\="true" name\="pointcut">pointcut ${name}(${args}) \: ${pointcut_expression};</template><template autoinsert\="true" context\="java" deleted\="false" description\="preinitialization pointcut (AspectJ)" enabled\="true" name\="preinitialization">preinitialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="set pointcut (AspectJ)" enabled\="true" name\="set">set(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="Affiche la stack d'appel" enabled\="true" name\="stack">/*xxx*/new Exception("***Stack trace ${user}***").printStackTrace();</template><template autoinsert\="true" context\="java" deleted\="false" description\="staticinitialization pointcut (AspectJ)" enabled\="true" name\="staticinitialization">staticinitialization(${type_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="thisJoinPoint (AspectJ)" enabled\="true" name\="thisJoinPoint">thisJoinPoint</template><template autoinsert\="true" context\="java" deleted\="false" description\="thisJoinPointStaticPart (AspectJ)" enabled\="true" name\="thisJoinPointStaticPart">thisJoinPointStaticPart</template><template autoinsert\="true" context\="java" deleted\="false" description\="within pointcut (AspectJ)" enabled\="true" name\="within">within(${type_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="withincode of a constructor pointcut (AspectJ)" enabled\="true" name\="withincode_cons">withincode(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="withincode of a method pointcut (AspectJ)" enabled\="true" name\="withincode_method">withincode(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="adviceexecution pointcut (AspectJ)" enabled\="true" name\="adviceexecution">adviceexecution()</template><template autoinsert\="true" context\="java" deleted\="false" description\="after returning advice (AspectJ)" enabled\="true" name\="after_returning">after(${args}) returning() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="java" deleted\="false" description\="after throwing advice (AspectJ)" enabled\="true" name\="after_throwing">after(${args}) throwing() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="java" deleted\="false" description\="around advice (AspectJ)" enabled\="true" name\="around">around(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="java" deleted\="false" description\="before advice (AspectJ)" enabled\="true" name\="before">before(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="java" deleted\="false" description\="call constructor pointcut (AspectJ)" enabled\="true" name\="call_cons">call(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="call method declaration (AspectJ)" enabled\="true" name\="call_method">call(${modifiers_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="cflow pointcut (AspectJ)" enabled\="true" name\="cflow">cflow(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="cflowbelow pointcut (AspectJ)" enabled\="true" name\="cflowbelow">cflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="declare error (AspectJ)" enabled\="true" name\="dece">declare error \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="java" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_extends">declare parents \: ${type_pattern} extends ${type};</template><template autoinsert\="true" context\="java" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_implements">declare parents \: ${type_pattern} implements ${type};</template><template autoinsert\="true" context\="java" deleted\="false" description\="declare soft (AspectJ)" enabled\="true" name\="decs">declare soft \: ${exception_type} \: ${pointcut_expression};</template><template autoinsert\="true" context\="java" deleted\="false" description\="declare warning (AspectJ)" enabled\="true" name\="decw">declare warning \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="java" deleted\="false" description\="execution of a constructor pointcut (AspectJ)" enabled\="true" name\="execution_cons">execution(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="execution of a method pointcut (AspectJ)" enabled\="true" name\="execution_method">execution(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="foff" enabled\="true" name\="foff">// @formatter\:off</template><template autoinsert\="true" context\="java" deleted\="false" description\="fon" enabled\="true" name\="fon">// @formatter\:on</template><template autoinsert\="true" context\="java" deleted\="false" description\="get pointcut (AspectJ)" enabled\="true" name\="get">get(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="handler pointcut (AspectJ)" enabled\="true" name\="handler">handler(${type_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="initialization pointcut (AspectJ)" enabled\="true" name\="initialization">initialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="Comment which makes VE show the declaration floating on the graphical viewer " enabled\="true" name\="jve-float">// @jve\:decl-index\=0\:visual-constraint\=""</template><template autoinsert\="true" context\="java" deleted\="false" description\="Comment which forces VE to model the declaration on this line " enabled\="true" name\="jve-model">// @jve\:decl-index\=0\:</template><template autoinsert\="true" context\="java" deleted\="false" description\="Comment which makes VE show the declaration on the graphical viewer at 100,100 " enabled\="true" name\="jve-xy">// @jve\:decl-index\=0\:visual-constraint\="100,100${cursor}"</template><template autoinsert\="true" context\="java" deleted\="false" description\="Enregistrement d'un listener IV" enabled\="true" name\="ncaddelementlistener">// NE PAS OUBLIER DE removeListener(ivListener) \!\n    IVElementListener ivListener \= new IVElementAdapter() {\n        /**\n         * Notification d'un \u00E9v\u00E8nement de changement de valeur sur l'\u00E9l\u00E9ment\n         * @param\tevent\tObjet contenant les informations sur l'\u00E9v\u00E8nement\n         */\n        public void valueChanged(IVValueEvent event) {}\n        /**\n         * Notification d'un \u00E9v\u00E8nement de changement de structure sur l'\u00E9l\u00E9ment\n         * @param\tevent\tObjet contenant les informations sur l'\u00E9v\u00E8nement\n         */\n        public void structureChanged(IVStructureEvent event) {}\n    \n        /**\n         * Notification d'un \u00E9v\u00E8nement changement d'une proprit l'\u00E9l\u00E9ment\n         * @param\tevent\tObjet contenant les informations sur l'\u00E9v\u00E8nement\n         */\n        public void propertyChanged(IVPropertyChangeEvent event) {}\n    \n    };\n    ${cursor}.addElementListener(ivListener, IVCoreConstants.TOTAL_RECURSIVITY);.</template><template autoinsert\="true" context\="java" deleted\="false" description\="Commentaire dans le corps d'une m\u00E9thode" enabled\="true" name\="nccomment">// ${date} (${user}) \: Action ${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Impl\u00E9mentation de nc.util.stream.NCExternalizable " enabled\="true" name\="ncexternalizable">import java.io.DataInput;\nimport java.io.DataOutput;\nimport java.io.IOException;\nimport nc.util.stream.NCExternalizable;\nimport nc.util.stream.Reader;\nimport nc.util.stream.Writer;\nimport nc.util.MutableInteger;\n// -------------------------------------------------------------------------\n// NCExternalizable\n// -------------------------------------------------------------------------\n/** \n* Code de s\u00E9rialisation.Ce byte est s\u00E9rialis\u00E9, ceci permettra de g\u00E9rer les \n* \u00E9volutions de versions.\n*/\nprivate final static byte NC_SERIAL_VERS \= (byte)1;\n\n// ATTENTION \!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\n// |NE PAS OUBLIER D AJOUTER implements NCExternalizable A VOTRE CLASSE\n// NE PAS OUBLIER LE CONSTRUCTEUR VIDE PUBLIC\n// TESTER LA SERIALISATION \: nc.util.stream.SerialTester\n// ATTENTION \!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\!\n\n/** Constructeur vide pour la s\u00E9rialisation */\npublic ${enclosing_type}() {\n\tsuper();\n}\n/** Main de test de la s\u00E9rialisation */\npublic static void main(String[] args) throws Exception {\n\t${enclosing_type} obj \= new ${enclosing_type}();\n\t//obj.setXXX();\n\tnc.util.stream.SerialTester.serialTest(obj);\n}\n/**\n * S\u00E9rialisation de l'instance dans le flux\n *\n * @param out Le flux \u00E0 utiliser\n * @return la taille (en octets) de la s\u00E9rialisation ou -1 si inconnue\n */\npublic int writeExternalNC(DataOutput out) throws IOException {\n\tint size \= Writer.writeByte(out, NC_SERIAL_VERS);\n    size +\= Writer.writeObject(out, ${cursor}object);\n    return size;\n}\n\n/**\n * D\u00E9s\u00E9rialisation d'une instance depuis un flux.&lt;br&gt;\n * L'instance est obtenue par le biais du constructeur vide (qui doit donc\n * \u00EAtre impl\u00E9ment\u00E9 et accessible(\=\=public))\n *\n * @param in Le flux cibl\u00E9\n * @return la taille (en octets) de la d\u00E9s\u00E9rialisation ou -1 si inconnue\n */\npublic void readExternalNC(DataInput in, MutableInteger size) throws IOException, ClassNotFoundException {\n\tbyte vers \= Reader.readByte(in, size);\n\tif (vers \!\= NC_SERIAL_VERS) {\n\t\t// evolution de version \!\!\!\u00E0 g\u00E9rer\!\n\t}\n    object \= Reader.readObject(in, size);\n}</template><template autoinsert\="false" context\="java" deleted\="false" description\="get et Set d'un propri\u00E9t\u00E9 IntraVision" enabled\="true" name\="ncgetset">    private Object get${word_selection}() {\n    \treturn getProperty(${word_selection});\n    }\n    private void set${word_selection}(Object value){\n    \ttry {\n    \t\tsetPropertyIfNeeded(${word_selection}, value);\n    \t} catch (IVAccessException ex) {\n    \t\tlogMessage(NCTracer.ERR_UNEXP, "No rights to change property "+${word_selection}+" to "+value, ex);\n    \t} catch (IVVetoException ex) {\n    \t\tlogMessage(NCTracer.ERR_UNEXP, "Modification of property "+${word_selection}+" to "+value+" was rejected by sbdy", ex);\n    \t}\n    }\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Cr\u00E9ation d'un IVOConfigData" enabled\="true" name\="ncivoconfigdata">package ${enclosing_package};\n\nimport nc.iv3.comps.base.IVAdminObject;\nimport nc.iv3.comps.base.access.AllowedUseCases;\nimport nc.iv3.core.IVElementDescriptor;\nimport nc.iv3.core.IVIdentity;\nimport nc.iv3.eng.config.server.IVOAbstractConfigData;\nimport nc.iv3.util.IVException;\n\n/**\n * IVO g\u00E9rant la configuration de ...\n * @author NetCeler - ${user}\n * @since ${date}\n */\npublic class IVOXXXConfigData extends IVOAbstractConfigData  {\n\n    // -------------------------------------------------------------------------\n    // Constantes\n    // -------------------------------------------------------------------------\n\n    static final String CONFIG_DATA_IDENTIFIER \= "TODO";\n\n    // -------------------------------------------------------------------------\n    // IVO Structure\n    // -------------------------------------------------------------------------\n\n    public static IVElementDescriptor[] getElementDescriptors() {\n        return IVOAbstractConfigData.getElementDescriptors();\n    }\n\n    // -------------------------------------------------------------------------\n    // IVO Construction\n    // -------------------------------------------------------------------------\n\n    public IVOXXXConfigData() {\n    \tsuper();\n    }\n\n    public IVOXXXConfigData(String identifier) throws IVException {\n        super(identifier);\n    }\n\n    // -------------------------------------------------------------------------\n    // IVO Gestion des droits\n    // -------------------------------------------------------------------------\n\n\t/** Accessible \u00E0 tous le monde, pour le moment */\n\tpublic AllowedUseCases getUseCasesFor(short userId, byte mediaId) {\n\t\treturn AllowedUseCases.ALL_USE_CASES;\n\t}\n\n\t/** Accessible \u00E0 tous le monde, pour le moment */\n\tpublic boolean isModifiableBy(AllowedUseCases useCases) {\n\t\treturn true;\n\t}\n\n\t/** Accessible \u00E0 tous le monde, pour le moment */\n\tpublic boolean isUseableBy(AllowedUseCases useCases) {\n\t\t// On a tjrs besoin de cette donn\u00E9e de configuration\n\t\treturn true;\n\t}\n\n    // -------------------------------------------------------------------------\n    // As IVOConfigData\n    // -------------------------------------------------------------------------\n\n\t/**\n\t * Indique si oui ou non la configuration est "valide" dans le contexte courant du FlyServer.\n\t * Par exemple, la config d'une utilisateur n'est plus valide si cet utilisateur\n\t * ne fait plus parti du syst\u00E8me. Si cette config n'est plus valide, elle sera supprim\u00E9e de\n\t * l'IVOConfigManager\n\t * @return true ou false selon la "validit\u00E9" de cette configuration\n\t */\n\tpublic boolean isValid() {\n        // Cette donn\u00E9e de configuration est toujours valide.\n\t\treturn true;\n    }\n\n    /**\n     * Indique si oui ou non, la configuration associ\u00E9e peut \u00EAtre inject\u00E9e par\n     * l'utilisateur cibl\u00E9\n     * @param identity Identit\u00E9 de l'utilisateur demandant l'injection\n     * @return true si la configuration associ\u00E9e peut \u00EAtre inject\u00E9e\n     */\n\tpublic boolean mayBeInjected(IVIdentity identity) {\n        if (identity \=\= null) {\n            return false;\n        } else if (identity.isSystemIdentity()) {\n            return true;\n        } else {\n             return isModifiableBy(getUseCasesFor(\n                identity.getUserID(), identity.getMediaID()));\n        }\n    }\n\n// Facultatif\:  gestion plus fine de l'injection (conversion de prop, veto...)\n//\t/**\n//\t * M\u00E9thode permettant de renvoyer un objet charg\u00E9 de la v\u00E9rification interne du process\n//\t * d'injection \:  setProperty, ....\n//\t * @param identity Identit\u00E9 de celui demandant l'injection\n//\t * @param params les param\u00E8tres d'injection\n//\t * @return un \u00E9ventuel Validator ou null si pas besoin\n//\t * @since  02.fev.2004 (JG)\n//\t */\n//\tprotected InjectValidator getInjectValidator(IVIdentity identity, InjectActionParams params) {\n//\t\treturn null;\n//\t}\n\n\n}\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Cr\u00E9ation de l'IVO de configuration des droits" enabled\="true" name\="ncivoconfigrights">package YYYY;\n\nimport nc.iv3.comps.base.access.AllowedUseCases;\nimport nc.iv3.core.IVElementDescriptor;\nimport nc.iv3.eng.config.server.IVOAbstractRightsConfigData;\nimport nc.iv3.util.IVException;\n\n/**\n * IVO G\u00E9rant la configuration des droits des utilisateurs pour ce produit\n * @author NetCeler - ${user}\n * @since ${date}\n */\npublic class XXX extends IVOAbstractRightsConfigData {\n\n    public static IVElementDescriptor[] getElementDescriptors() {\n\t\treturn IVOAbstractRightsConfigData.getElementDescriptors();\n    }\n\n    public XXX() {\n    }\n\n    public XXX(String identifier) throws IVException {\n\t\tsuper(identifier);\n    }\n\n    // -------------------------------------------------------------------------\n    // Gestion des droits d'acc\u00E8s \u00E0 cet config\!\n    // -------------------------------------------------------------------------\n\n\t/** Accessible \u00E0 tous le monde */\n    public AllowedUseCases getUseCasesFor(short userId, byte mediaId) {\n\t\treturn AllowedUseCases.ALL_USE_CASES;\n    }\n\n\t/** Accessible \u00E0 tous le monde */\n    public boolean isModifiableBy(AllowedUseCases useCases) {\n\t\treturn true;\n    }\n\n    public boolean isUseableBy(AllowedUseCases useCases) {\n\t\t// On a tjrs besoin de cette donn\u00E9e de configuration\n\t\treturn true;\n    }\n\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Cr\u00E9ation du ConfigServer d'un produit" enabled\="true" name\="ncivoconfigserver">package ${enclosing_package};\n\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\n\nimport nc.iv3.comps.base.access.AllowedUseCases;\nimport nc.iv3.core.IVAccessException;\nimport nc.iv3.core.IVBadIdentifierException;\nimport nc.iv3.core.IVElementDescriptor;\nimport nc.iv3.eng.config.server.IVOAbstractConfigData;\nimport nc.iv3.eng.config.server.IVOAbstractConfigServer;\nimport nc.iv3.eng.config.server.IVOAbstractRightsConfigData;\nimport nc.iv3.util.IVException;\n\n/**\n * Gestionnaire de la configuration du produit TODO\n * Classe de base de la gestion de la configuration cot\u00E9 FlyServer.\n * Cette classe doit \u00EAtre sous-class\u00E9e afin de r\u00E9pondre aux exigences produit de chaque FlyServer.\n * @author NetCeler - JG\n */\npublic class ${enclosing_type} extends IVOAbstractConfigServer {\n\n\t/**\n\t * La stucture est remplie au start (advancedObjectStarted)\n\t */\n\tpublic static IVElementDescriptor[] getElementDescriptors() {\n\t\treturn IVOAbstractConfigServer.getElementDescriptors();\n\t}\n\n\tpublic static Map getIVCommands() {\n\t\treturn IVOAbstractConfigServer.getIVCommands();\n\t}\n\n\t// -------------------------------------------------------------------------\n\t// IVO Construction\n\t// -------------------------------------------------------------------------\n\n\tpublic IVOScarabConfigServer() {\n\t\tsuper();\n\t}\n\n\tpublic IVOScarabConfigServer(String identifier) throws IVException {\n\t\tsuper(identifier);\n\t}\n\n\t// -------------------------------------------------------------------------\n\t// IVO gestion des droits  \: pas de gestion des droits dans Scarab\u00E9e, pour le moment...\n\t// -------------------------------------------------------------------------\n\n\tpublic AllowedUseCases getUseCasesFor(short userId, byte mediaId) {\n\t\treturn AllowedUseCases.ALL_USE_CASES;\n\t}\n\n\tpublic boolean isModifiableBy(AllowedUseCases useCases) {\n\t\treturn true;\n\t}\n\n\tpublic boolean isUseableBy(AllowedUseCases useCases) {\n\t\treturn true;\n\t}\n\n\t// -------------------------------------------------------------------------\n\t// IVO lancement\n\t// -------------------------------------------------------------------------\n\n\t/**\n\t * Au lancement du serveur, on met en place l'orborescence des des fichiers de configuration g\u00E9r\u00E9s par ce\n\t * ConfigServer.\n\t */\n\tprotected void advancedObjectStarted() throws nc.iv3.util.IVException {\n\t\t// TODO Pour chaque IVO, l'ajout\u00E9 dans la liste des COnfigData Du ConfigServer\n\t\t// On cr\u00E9\u00E9 les IVOConfigData absents.\n\t\ttry {\n\t\t\tgetIVOConfigData(IVOProcessListConfigData.CONFIG_DATA_IDENTIFIER);\n\t\t} catch (IVBadIdentifierException ex) {\n\t\t\taddIVOConfigData(new IVOProcessListConfigData(IVOProcessListConfigData.CONFIG_DATA_IDENTIFIER));\n\t\t}\n\t\t// 02.sep.2004 (JG) Gestion des droits du FlyServer\n\t\ttry {\n\t\t\tgetIVOConfigData(IVOAbstractRightsConfigData.CONFIG_DATA_IDENTIFIER);\n\t\t} catch (IVBadIdentifierException ex) {\n\t\t\t// TODO Classe de l'IVOConfigData g\u00E9rant les droits du produit (sous classe IVOAbstractRightsConfigData)\n\t\t\taddIVOConfigData(new IVOScarabRightsConfigData(IVOAbstractRightsConfigData.CONFIG_DATA_IDENTIFIER));\n\t\t}\n\n\t}\n\n\tprotected void stopAdvancedObject() {\n\t\t// rien \u00E0 stopper\n\t}\n\n\t// -------------------------------------------------------------------------\n\t// ConfigServer\n\t// -------------------------------------------------------------------------\n\n\t/**\n\t * @return l'object IVOConfigData \u00E0 injecter en premier\n\t */\n\tpublic IVOAbstractConfigData getRoot() throws IVBadIdentifierException, IVAccessException {\n\t\t// TODO retourner le ConfigData \u00E0 injecter en premier\n\t\treturn getIVOConfigData(IVOProcessListConfigData.CONFIG_DATA_IDENTIFIER);\n\t}\n\n\t/**\n\t * &lt;bold&gt;ne pas oublier le ConfigData rights qui existe pour tous les produits\!&lt;/bold&gt;\n\t * @param parent IVOConfigData "Parent"\n\t * @return la liste des IVOAbstractConfigData "fils" du ConfigData cibl\u00E9\n\t * @see nc.iv3.system.config\#IVORightsConfigData\n\t */\n\tpublic List getChilds(IVOAbstractConfigData parent) {\n\t\t// TODO retourner les fils de chaque parent\n\t\tif (parent instanceof IVOProcessListConfigData) {\n\t\t\tList l \= new LinkedList();\n\t\t\taddConfigDataIfFound(IVOAbstractRightsConfigData.CONFIG_DATA_IDENTIFIER, l);\n\t\t\treturn l;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Log d'une Exception" enabled\="true" name\="nclogerr">logMessage(NCConstants.ERR_UNEXP, "${cursor}", ex);</template><template autoinsert\="true" context\="java" deleted\="false" description\="LogMessage NetCeler" enabled\="true" name\="nclogmessage">logMessage(NCConstants.INFO_DEBUG, "${cursor}", );</template><template autoinsert\="true" context\="java" deleted\="false" description\="Impl\u00E9mentation des m\u00E9thodes logMessage" enabled\="true" name\="nclogmessageimmpl">    // -------------------------------------------------------------------------\n\t// Logs\n   // -------------------------------------------------------------------------\n\tpublic void logMessage(String aText) {\n\t\tlogMessage(NCConstants.INFO_DEBUG, aText, null);\n\t}\n\tpublic void logMessage(String aCode, String aText, Object aDetail) {\n\t\tlogMessage(aCode, aText, aDetail);\n\t}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Pause avec ConsoleRequester" enabled\="true" name\="ncpause">    System.out.println("Press ENTER key to continue");\n    String line \= ConsoleRequester.waitForLine();\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Pause avec System.in" enabled\="true" name\="ncpausein">try {\n    \tSystem.out.println("Press ENTER key to continue...");\n    \tSystem.in.read();\n    \twhile(System.in.available() \!\= 0) {\n    \t\tSystem.in.read();\n    \t}\n    }catch (Exception ex) {\n    }</template><template autoinsert\="true" context\="java" deleted\="false" description\="S\u00E9parateur de section au sein d'une classe Java" enabled\="true" name\="ncsep">\t// -------------------------------------------------------------------------\n\t// ${cursor}\n\t// -------------------------------------------------------------------------\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Accesseurs" enabled\="true" name\="ncsepaccessors">\t// Acc\u00E9s aux propri\u00E9t\u00E9s de l'objet -----------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="S\u00E9parateur d'attributs" enabled\="true" name\="ncsepattributes">\t// Attributs de l'objet ----------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="Constantes" enabled\="true" name\="ncsepconstantes">\t// Constantes --------------------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="Constructeur" enabled\="true" name\="ncsepconstructor">\t// Constructeurs -----------------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="Impl\u00E9mentation des m\u00E9thodes" enabled\="true" name\="ncsepimpl">\t// M\u00E9thodes issues de ${cursor}                  ---------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="M\u00E9thodes package" enabled\="true" name\="ncseppackage">\t// M\u00E9thodes package --------------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="M\u00E9thodes priv\u00E9es" enabled\="true" name\="ncsepprivate">\t// M\u00E9thodes priv\u00E9es --------------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="S\u00E9parateur de propri\u00E9t\u00E9s" enabled\="true" name\="ncsepproperties">\t// Propri\u00E9t\u00E9s de l'objet ---------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="M\u00E9thodes publiques" enabled\="true" name\="ncseppublic">\t// M\u00E9thodes publiques ------------------------------------------------------</template><template autoinsert\="true" context\="java" deleted\="false" description\="M\u00E9thodes de tests" enabled\="true" name\="ncseptests">\t// M\u00E9thodes de tests -------------------------------------------------------</template><template autoinsert\="true" context\="javadoc" deleted\="false" description\="JavaDoc since comment" enabled\="true" name\="ncsince">@since ${date} (${user}) \: ${cursor}</template><template autoinsert\="true" context\="java" deleted\="false" description\="Cr\u00E9er un thread Java" enabled\="true" name\="ncthread">\t\t\t\tfinal Thread thread \= new Thread(NCUtil.getNCThreadGroup(), "Thread Name") {\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t${word_selection}${cursor}\n\t\t\t\t\t\t} catch (OutOfMemoryError ome) {\n\t\t\t\t\t\t\tthrow ome;\n\t\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\t\tNCTracer.getDefaultTracer().logDebugMessage(NCConstants.ERR_UNEXP, "fatal error in thread "+getName(), t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthread.start();</template><template autoinsert\="true" context\="java" deleted\="false" description\="pointcut declaration (AspectJ)" enabled\="true" name\="pc">pointcut ${name}() \: ${pointcut_expression};</template><template autoinsert\="true" context\="java" deleted\="false" description\="percflow (AspectJ)" enabled\="true" name\="percflow">percflow(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="percflowbelow (AspectJ)" enabled\="true" name\="percflowbelow">percflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="pertarget (AspectJ)" enabled\="true" name\="pertarget">pertarget(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="perthis (AspectJ)" enabled\="true" name\="perthis">perthis(${pointcut_expression})</template><template autoinsert\="true" context\="java" deleted\="false" description\="pertypewithin (AspectJ)" enabled\="true" name\="pertypewithin">pertypewithin(${type_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="pointcut (AspectJ)" enabled\="true" name\="pointcut">pointcut ${name}(${args}) \: ${pointcut_expression};</template><template autoinsert\="true" context\="java" deleted\="false" description\="preinitialization pointcut (AspectJ)" enabled\="true" name\="preinitialization">preinitialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="set pointcut (AspectJ)" enabled\="true" name\="set">set(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="Affiche la stack d'appel" enabled\="true" name\="stack">/*xxx*/new Exception("***Stack trace ${user}***").printStackTrace();</template><template autoinsert\="true" context\="java" deleted\="false" description\="staticinitialization pointcut (AspectJ)" enabled\="true" name\="staticinitialization">staticinitialization(${type_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="thisJoinPoint (AspectJ)" enabled\="true" name\="thisJoinPoint">thisJoinPoint</template><template autoinsert\="true" context\="java" deleted\="false" description\="thisJoinPointStaticPart (AspectJ)" enabled\="true" name\="thisJoinPointStaticPart">thisJoinPointStaticPart</template><template autoinsert\="true" context\="java" deleted\="false" description\="within pointcut (AspectJ)" enabled\="true" name\="within">within(${type_pattern})</template><template autoinsert\="true" context\="java" deleted\="false" description\="withincode of a constructor pointcut (AspectJ)" enabled\="true" name\="withincode_cons">withincode(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="java" deleted\="false" description\="withincode of a method pointcut (AspectJ)" enabled\="true" name\="withincode_method">withincode(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template></templates>
